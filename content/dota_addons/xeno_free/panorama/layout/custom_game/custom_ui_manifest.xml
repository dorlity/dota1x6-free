<!-- xml reconstructed by Source 2 Viewer 7.0.0.0 - https://valveresourceformat.github.io -->
<root>
	<scripts>
		<include src="s2r://panorama/scripts/custom_game/events_protector.vjs_c" />
		<include src="s2r://panorama/scripts/custom_game/upgrades_data.vjs_c" />
		<include src="s2r://panorama/scripts/custom_game/vector_targeting_marci.vjs_c" />
		<include src="s2r://panorama/scripts/custom_game/vector_targeting.vjs_c" />
		<include src="s2r://panorama/scripts/custom_game/custom_ability_particles.vjs_c" />
		<include src="s2r://panorama/scripts/custom_game/portraits_donate.vjs_c" />
	</scripts>
	<script><![CDATA[



GameEvents.Subscribe_custom("panorama_cooldown_error", function(data) 
{
	GameEvents.SendEventClientSide("dota_hud_error_message", 
	{
		"splitscreenplayer": 0,
		"reason": data.reason || 80,
		"message": $.Localize(data.message) + data.time
	})
})

var dotaHud = $.GetContextPanel().GetParent().GetParent().GetParent()
dotaHud.FindChildTraverse("StatBranch").style.visibility = "collapse";



var mapHud = dotaHud.FindChildTraverse("HUDSkinMinimap")

if (mapHud)
{
   mapHud.style.visibility = "collapse"     
}

var TopHud = dotaHud.FindChildTraverse("HUDSkinTopBarBG")

if (TopHud)
{
   TopHud.style.visibility = "collapse"     
}

dotaHud.FindChildTraverse("DOTAStatBranch").style.visibility = "collapse";

var ChatHud = dotaHud.FindChildTraverse("HudChat")
if ( !Game.IsInToolsMode() )
{
    ChatHud.DeleteAsync(0)     
}


dotaHud.FindChildTraverse("level_stats_frame").style.visibility = "collapse";

dotaHud.FindChildTraverse("inventory_tpscroll_HotkeyContainer").FindChildTraverse("Hotkey").style.visibility = "visible"



GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );
GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );

GameEvents.Subscribe_custom("Attack_Base", function(data) 
{
    Game.EmitSound(data.sound);
})

var PreGame = dotaHud.FindChildTraverse("PreGame");


PreGame.style.opacity = "0";


GameEvents.Subscribe_custom("CreateIngameErrorMessage", function(data) 
        {
            GameEvents.SendEventClientSide("dota_hud_error_message", 
            {
                "splitscreenplayer": 0,
                "reason": data.reason || 80,
                "message": data.message
            })
        })

]]></script>
	<Panel>
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/dota_hud_chat_wheel.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/dota_hud_hero_chat_wheel.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/custom_talent_panels.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/damage_info.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/alerts.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/arc_warden_tempest_custom.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/test_mode.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/upgrades_show.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/upgrades.vxml_c" />
		<CustomUIElement type="EndScreen" layoutfile="s2r://panorama/layout/custom_game/multiteam_end_screen.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/multiteam_end_screen.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/custom_buff_panel.vxml_c" />
		<CustomUIElement type="PregameStrategy" layoutfile="s2r://panorama/layout/custom_game/custom_pick.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/tipbutton.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/end_screen.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/info_reports.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/debug.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/buttons_hud_custom.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/points.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/timer.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/pick_skill_event.vxml_c" />
		<CustomUIElement type="Hud" layoutfile="s2r://panorama/layout/custom_game/choise.vxml_c" />
		<CustomUIElement type="HudTopBar" layoutfile="s2r://panorama/layout/custom_game/multiteam_top_scoreboard.vxml_c" />
		<Panel class="LoadAfterPick" id="LoadAfterPick" />
	</Panel>
</root>
